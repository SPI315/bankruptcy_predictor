version: '3.5'

services:
  app:
    container_name: app
    build: ./app/
    image: event-planner-api:latest
    ports: 
      - "8080:8080"
    env_file: 
      - .env
    volumes:
      - ./app:/app
    command: python api.py
    restart: always
    depends_on:
      postgres:
        condition: service_started

  worker:
    # container_name: worker
    image: event-planner-api:latest
    env_file: 
      - .env
    volumes:
      - ./app:/app
    command: python rmworker_init.py
    restart: always
    deploy:
      replicas: 2
    depends_on:
      rabbitmq:
        condition: service_started

  streamlit:
    container_name: streamlit
    build: ./streamlit/
    image: event-planner-streamlit:latest
    ports: 
      - "8501:8501"
    env_file: 
      - .env
    volumes:
      - ./streamlit:/streamlit
    command: streamlit run main.py
    restart: always
    depends_on:
      - app

  postgres:
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    image: postgres:16.2-alpine
    restart: always

  rabbitmq:
    image: rabbitmq:3.13.1-management
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RM_USER}
      - RABBITMQ_DEFAULT_PASS=${RM_PASSWORD}
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    ports:
      - 15672:15672
      - 5672:5672

  web:
    build: ./nginx
    ports:
      - 80:80
      - 443:443
    depends_on:
      - app
      - postgres

networks:
  default:
    driver: bridge